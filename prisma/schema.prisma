generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id              String      @id @default(uuid()) @unique
    name            String?
    lastname        String?
    email           String?      @unique
    password        String?
    userBudget      UserBudget?
    image           String?
    accounts        Account[]
    sessions        Session[]
}

model UserBudget {
    id              String      @id @default(cuid()) @unique
    budget          Float       @default(0)
    dailyBudgets    DailyBudget[]
    user            User        @relation(fields: [userId], references: [id])
    userId          String      @unique
    createdAt       DateTime    @default(now())
}

model DailyBudget {
    id              String      @id @default(uuid()) @unique
    createdAt       DateTime    @default(now())
    income          Float
    outcome         Float
    userBudget      UserBudget  @relation(fields: [userBudgetId], references: [id])   
    userBudgetId    String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}



model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}